{"version":3,"sources":["main.js"],"names":["GateForm","selector","_ref","onSubmit","onIncorrect","formSelector","_classCallCheck","this","el","document","querySelector","btn","alert","form","mainImg","getAttribute","setup","querySelectorAll","data","allow","inputs","name","input","checked","value","length","createElement","setAttribute","forEach","key","push","i","changable","arguments","undefined","panelLabels","hide","panelInputs","style","display","show","label","action","typeInputs","_this","val","span","innerText","setOutputById","id","cb","radio","number","inp","addEventListener","e","setOutput","idx","match","togglePanels","getPanelIndex","changeImage","remove","preventDefault","_this2","clearHiddenInputs","appendChild","_setupInputs","InfoTooltips","elems","contentItems","btns","tooltip","classList","add","x","y","left","append","_this3","pageY","getTooltipElem","setTooltip","getFormData","activeModal","Modal","_ref2","onCall","closeBtn","_this4","disableAnimation","setTimeout","body","_this5","elem","contains","hideModal","showModal","_this6","overlay","target","sendForm","onSuccess","event","xhr","removeTooltip","serialize","open","setRequestHeader","onreadystatechange","readyState","status","reset","hasAttribute","send","incorrectFormData","validateForm","inputTel","inputName","nodeName","elements","type","q","encodeURIComponent","writeCommaCheckbox","j","options","selected","join","tooltips","garageGateModal","afterModals","swingGateModal","slidingGateModal","regTel","callModal","thanksCalc","thanksCall","incorrectFields","ownGateForm","ownModal","swingGateForm","showModalCallBtn"],"mappings":"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","file":"../main.min.js","sourcesContent":["class GateForm {\r\n    constructor(selector, {onSubmit, onIncorrect, formSelector}) {\r\n        this.selector = selector;\r\n        this.el = document.querySelector(selector);\r\n        this.btn = this.el.querySelector('.gate-form__submit');\r\n        this.onSubmit = onSubmit || function(){};\r\n        this.onIncorrect = onIncorrect || function(){alert('Выбраны не все значения!')};\r\n        this.form = document.querySelector(formSelector);\r\n        this.mainImg = [\r\n            this.el.querySelector('.gate-form__img img').getAttribute('src'),\r\n            this.el.querySelector('.gate-form__img img').getAttribute('data-src')\r\n        ];\r\n        \r\n        this.setup();\r\n    }\r\n    getFormData() {\r\n        const inputs = this.el.querySelectorAll('input');\r\n        // const names = new Set();\r\n        const data = {};\r\n        let allow = true;\r\n        inputs.forEach(input => {\r\n            const name = input.getAttribute('name');\r\n            // names.add(name);\r\n            \r\n            if ((input.getAttribute('type') === 'checkbox' || input.getAttribute('type') === 'radio') && input.checked) {\r\n                data[name] = data[name] ? \r\n                    data[name] + ', ' + input.value : \r\n                    input.value;\r\n                // data[name] = input.value;\r\n            } else if ((input.getAttribute('type') === 'number' || input.getAttribute('type') === 'text') && input.value.length > 0) {\r\n                data[name] = input.value;\r\n            }\r\n\r\n        });\r\n        inputs.forEach(input => {\r\n            const name = input.getAttribute('name');\r\n            if (!data[name] && input.getAttribute('type') !== 'checkbox') {\r\n                allow = false;\r\n            }\r\n        });\r\n        return allow ? data : false;\r\n    }\r\n    getInputs(data) {\r\n        const inputs = [];\r\n        for (let key in data) {\r\n            const input = document.createElement('input');\r\n            input.setAttribute('type', 'hidden');\r\n            input.setAttribute('name', key);\r\n            input.setAttribute('value', data[key]);\r\n            inputs.push(input);\r\n        }\r\n        return inputs;\r\n    }\r\n    changeImage(i) {\r\n        let changable = true;\r\n        this.mainImg.forEach(el => {\r\n            if (el === undefined || el === null) changable = false;\r\n        });\r\n        if (changable) {\r\n            const img = this.el.querySelector('.gate-form__img img');\r\n            img.setAttribute('src', this.mainImg[i]);\r\n        }\r\n    }\r\n    togglePanels(action = 'auto') {\r\n        const typeInputs = this.el.querySelectorAll('input[name=\"gate-type\"]');\r\n        const panelInputs = this.el.querySelectorAll('input[name=\"gate-panel\"]');\r\n        const panelLabels = this.el.querySelectorAll('input[name=\"gate-panel\"] + label');\r\n        function hide() {\r\n            for (let i = 1; i < panelInputs.length; i++) {\r\n                panelInputs[i].checked = false;\r\n                panelLabels[i].style.display = 'none';\r\n            }\r\n        }\r\n        function show() {\r\n            panelLabels.forEach(label => {\r\n                label.style.display = '';\r\n            });\r\n        }\r\n        switch (action) {\r\n            case 'show':\r\n                show();\r\n                break;\r\n            case 'hide':\r\n                hide();\r\n                break;\r\n            case 'auto':\r\n                typeInputs[0].checked ? show() : hide();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    getPanelIndex() {\r\n        const panelInputs = this.el.querySelectorAll('input[name=\"gate-panel\"]');\r\n        // console.log(panelInputs);\r\n        for (let i = 0; i < panelInputs.length; i++) {\r\n            if (panelInputs[i].checked) return i;\r\n        }\r\n    }\r\n    _setupInputs() {\r\n        const setOutput = (name, val) => {\r\n            const span = this.el.querySelector('.output span[data-output=\"' + name + '\"]');\r\n            if (span !== null) {\r\n                span.innerText = val;\r\n            }\r\n        }\r\n        const setOutputById = (id, val) => {\r\n            const span = this.el.querySelector('.output span[data-output-by-id=\"' + id + '\"]');\r\n            if (span !== null) {\r\n                span.innerText = val;\r\n            }\r\n        }\r\n        const cb = this.el.querySelectorAll('input[type=checkbox]');\r\n        const radio = this.el.querySelectorAll('input[type=radio]');\r\n        const number = this.el.querySelectorAll('input[type=number]');\r\n        cb.forEach(inp => {\r\n            inp.addEventListener('change', e => {\r\n                const id = inp.getAttribute('id');\r\n\r\n                if (this.el.querySelector('.output span[data-output-by-id=\"' + id + '\"]') !== null) {\r\n                    inp.checked ?\r\n                        setOutputById(id, 'Да') :\r\n                        setOutputById(id, 'Нет');\r\n                } else {\r\n                    inp.checked ?\r\n                        setOutput(inp.getAttribute('name'), 'Да') :\r\n                        setOutput(inp.getAttribute('name'), 'Нет');\r\n                }\r\n            });\r\n        });\r\n        radio.forEach((inp, idx) => {\r\n            inp.addEventListener('change', e => {\r\n                setOutput(inp.getAttribute('name'), inp.value);\r\n                if (this.selector.match('.garage') && inp.getAttribute('name') == 'gate-type') {\r\n                    this.togglePanels();\r\n                    if (this.getPanelIndex() === undefined) {\r\n                        setOutput('gate-panel', '-');\r\n                    }\r\n                }\r\n                if (inp.getAttribute('name') == 'gate-type') {\r\n                    this.changeImage(idx);\r\n                }\r\n            });\r\n        });\r\n        number.forEach(inp => {\r\n            inp.addEventListener('change', e => {\r\n                setOutput(inp.getAttribute('name'), inp.value);\r\n            });\r\n        });\r\n    }\r\n    clearHiddenInputs() {\r\n        const inputs = this.form.querySelectorAll('input[type=\"hidden\"][name^=\"gate\"]');\r\n        inputs.forEach(input => {\r\n            input.remove();\r\n        });\r\n    }\r\n    setup() {\r\n        this.el.addEventListener('submit', e => {\r\n            e.preventDefault();\r\n            const data = this.getFormData();\r\n            if (data) {\r\n                this.clearHiddenInputs();\r\n                const inputs = this.getInputs(data);\r\n                inputs.forEach(inp => {this.form.appendChild(inp)});\r\n                this.onSubmit();\r\n            } else {\r\n                this.onIncorrect();\r\n            }\r\n        });\r\n        this._setupInputs();\r\n        // if (this.selector.match('.garage')) {\r\n        //     this.togglePanels('hide');\r\n        // }\r\n    }\r\n}\r\n\r\nclass InfoTooltips {\r\n    constructor() {\r\n        this.elems = document.querySelectorAll('.info');\r\n        this.contentItems = document.querySelectorAll('.info .info__content');\r\n        this.btns = document.querySelectorAll('.info .info__btn');\r\n        this.tooltip = null;\r\n        this.setup();\r\n    }\r\n    getTooltipElem(elem) {\r\n        const tooltip = elem.cloneNode(true);\r\n        tooltip.classList = '';\r\n        tooltip.classList.add('info-tooltip');\r\n        return tooltip;\r\n    }\r\n    setTooltip(x, y) {\r\n        this.tooltip.style.left = x + 'px';\r\n        this.tooltip.style.top = y + 'px';\r\n        document.body.append(this.tooltip);\r\n    }\r\n    removeTooltip() {\r\n        this.tooltip.remove();\r\n        this.tooltip = null;\r\n    }\r\n    setup() {\r\n        this.btns.forEach((btn, idx) => {\r\n            btn.addEventListener('mouseenter', e => {\r\n                const x = (e.pageX + 20);\r\n                const y = (e.pageY + 5);\r\n                this.tooltip = this.getTooltipElem(this.contentItems[idx]);\r\n                this.setTooltip(x, y);\r\n            });\r\n            btn.addEventListener('mouseleave', e => {\r\n                this.removeTooltip();\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nlet activeModal = null;\r\n\r\nclass Modal {\r\n    constructor(selector, {onCall}) {\r\n        this.selector = selector;\r\n        this.el = document.querySelector(this.selector);\r\n        if (this.el) {\r\n            this.onCall = onCall || function(){};\r\n            this.overlay = this.el.querySelector('.modal__overlay');\r\n            this.closeBtn = this.el.querySelector('.modal__close');\r\n            this.setup();\r\n        }\r\n    }\r\n    showModal(disableAnimation = false) {\r\n        activeModal = this;\r\n        if (disableAnimation) {\r\n            this.el.classList.add('active');\r\n        } else {\r\n            this.el.classList.remove('hiding');\r\n            this.el.classList.add('active');\r\n            this.el.classList.add('showing');\r\n            setTimeout(() => {\r\n                this.el.classList.remove('showing');\r\n            }, 250);\r\n        }\r\n        document.body.classList.add('lock');\r\n        this.onCall();\r\n    }\r\n    hideModal(disableAnimation = false) {\r\n        activeModal = null;\r\n        if (disableAnimation) {\r\n            this.el.classList.remove('active');\r\n        } else {\r\n            this.el.classList.remove('showing');\r\n            this.el.classList.add('hiding');\r\n            setTimeout(() => {\r\n                this.el.classList.remove('active');\r\n                this.el.classList.remove('hiding');\r\n            }, 250);\r\n        }\r\n        document.body.classList.remove('lock');\r\n    }\r\n    showingHandler() {\r\n        this.el.classList.contains('active') ?\r\n            this.hideModal() :\r\n            this.showModal();\r\n    }\r\n    setup() {\r\n        this.closeBtn.addEventListener('click', (e) => {\r\n            this.hideModal();\r\n        });\r\n        this.overlay.addEventListener('mousedown', (e) => {\r\n            if (e.target === this.overlay) {\r\n                this.hideModal();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction sendForm(form, onSuccess = null) {\r\n    onSuccess = onSuccess || function(){};\r\n    event.preventDefault();\r\n    if (validateForm(form)) {\r\n        var xhr = new XMLHttpRequest();\r\n        var body = serialize(form);\r\n        xhr.open('POST', './mail.php');\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4 && xhr.status == 200) {\r\n                form.reset();\r\n                onSuccess();\r\n                form.setAttribute('data-done', null);\r\n                if (form.hasAttribute('data-after')) {\r\n                    activeModal ? activeModal.hideModal() : void(0);\r\n                    const id = form.getAttribute('data-after');\r\n                    afterModals[id].showModal();\r\n                }\r\n            }\r\n        };\r\n        xhr.send(body);\r\n    } else {\r\n        incorrectFormData.showModal();\r\n        // alert('Введите корректные данные');\r\n    }\r\n}\r\nfunction validateForm(form) {\r\n\tvar regTel = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/;\r\n\tvar inputTel = form.querySelector('input[name=\"tel\"]');\r\n    var inputName = form.querySelector('input[name=\"name\"]');\r\n    var allow = true;\r\n    if (inputTel && !inputTel.value.match(regTel)) allow = false;\r\n    if (inputName && inputName.value.length < 2) allow = false;\r\n    return allow;\r\n}\r\nfunction serialize(form) {\r\n\tif (!form || form.nodeName !== \"FORM\") {\r\n\t\treturn false;\r\n\t}\r\n\tvar i, j, q = [];\r\n\tfor (i = form.elements.length - 1; i >= 0; i = i - 1) {\r\n\t\tif (form.elements[i].name === \"\") {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tswitch (form.elements[i].nodeName) {\r\n\t\t\tcase 'INPUT':\r\n\t\t\t\tswitch (form.elements[i].type) {\r\n\t\t\t\t\tcase 'text':\r\n\t\t\t\t\tcase 'tel':\r\n\t\t\t\t\tcase 'email':\r\n\t\t\t\t\tcase 'hidden':\r\n\t\t\t\t\tcase 'password':\r\n\t\t\t\t\tcase 'button':\r\n\t\t\t\t\tcase 'reset':\r\n\t\t\t\t\tcase 'submit':\r\n\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\t\twriteCommaCheckbox(form, i, q);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'radio':\r\n\t\t\t\t\t\tif (form.elements[i].checked) {\r\n\t\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'file':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'TEXTAREA':\r\n\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SELECT':\r\n\t\t\t\tswitch (form.elements[i].type) {\r\n\t\t\t\t\tcase 'select-one':\r\n\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'select-multiple':\r\n\t\t\t\t\t\tfor (j = form.elements[i].options.length - 1; j >= 0; j = j - 1) {\r\n\t\t\t\t\t\t\tif (form.elements[i].options[j].selected) {\r\n\t\t\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].options[j].value));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'BUTTON':\r\n\t\t\t\tswitch (form.elements[i].type) {\r\n\t\t\t\t\tcase 'reset':\r\n\t\t\t\t\tcase 'submit':\r\n\t\t\t\t\tcase 'button':\r\n\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn q.join(\"&\");\r\n}\r\n\r\nconst tooltips = new InfoTooltips();\r\n\r\nconst ownModal = new Modal('#ownForm', {\r\n    onCall: function() {\r\n        const form = ownModal.el.querySelector('form');\r\n        if (form && form.hasAttribute('data-done')) {\r\n            ownModal.hideModal(true);\r\n            const id = form.getAttribute('data-after');\r\n            afterModals[id].showModal();\r\n        }\r\n    }\r\n});\r\nconst garageGateModal = new Modal('#garageGateForm', {\r\n    onCall: function() {\r\n        const form = garageGateModal.el.querySelector('form');\r\n        if (form && form.hasAttribute('data-done')) {\r\n            garageGateModal.hideModal(true);\r\n            const id = form.getAttribute('data-after');\r\n            afterModals[id].showModal();\r\n        }\r\n    }\r\n});\r\nconst swingGateModal = new Modal('#swingGateForm', {\r\n    onCall: function() {\r\n        const form = swingGateModal.el.querySelector('form');\r\n        if (form && form.hasAttribute('data-done')) {\r\n            swingGateModal.hideModal(true);\r\n            const id = form.getAttribute('data-after');\r\n            afterModals[id].showModal();\r\n        }\r\n    }\r\n});\r\nconst slidingGateModal = new Modal('#slidingGateForm', {\r\n    onCall: function() {\r\n        const form = slidingGateModal.el.querySelector('form');\r\n        if (form && form.hasAttribute('data-done')) {\r\n            slidingGateModal.hideModal(true);\r\n            const id = form.getAttribute('data-after');\r\n            afterModals[id].showModal();\r\n        }\r\n    }\r\n});\r\nconst callModal = new Modal('#callMe', {\r\n    onCall: function() {\r\n        const form = callModal.el.querySelector('form');\r\n        if (form && form.hasAttribute('data-done')) {\r\n            callModal.hideModal(true);\r\n            const id = form.getAttribute('data-after');\r\n            afterModals[id].showModal();\r\n        }\r\n    }\r\n});\r\nconst thanksCalc = new Modal('#thanksCalc', {});\r\nconst thanksCall = new Modal('#thanksCall', {});\r\nconst incorrectFields = new Modal('#incorrectFields', {});\r\nconst incorrectFormData = new Modal('#incorrectFormData', {});\r\nconst afterModals = {\r\n    thanksCalc, thanksCall\r\n};\r\n\r\nconst ownGateForm = new GateForm('.own .gate-form', {\r\n    formSelector: '#ownForm form',\r\n    onSubmit: function() {\r\n        ownModal.showModal();\r\n    },\r\n    onIncorrect: function() {\r\n        incorrectFields.showModal();\r\n    },\r\n});\r\nconst garageGateForm = new GateForm('.garage .gate-form', {\r\n    formSelector: '#garageGateForm form',\r\n    onSubmit: function() {\r\n        garageGateModal.showModal();\r\n    },\r\n    onIncorrect: function() {\r\n        incorrectFields.showModal();\r\n    }\r\n});\r\nconst slidingGateForm = new GateForm('.sliding .gate-form', {\r\n    formSelector: '#slidingGateForm form',\r\n    onSubmit: function() {\r\n        slidingGateModal.showModal();\r\n    },\r\n    onIncorrect: function() {\r\n        incorrectFields.showModal();\r\n    }\r\n});\r\nconst swingGateForm = new GateForm('.swing .gate-form', {\r\n    formSelector: '#swingGateForm form',\r\n    onSubmit: function() {\r\n        swingGateModal.showModal();\r\n    },\r\n    onIncorrect: function() {\r\n        incorrectFields.showModal();\r\n    }\r\n});\r\n\r\nconst showModalCallBtn = document.querySelector('#showModalCall');\r\nshowModalCallBtn.addEventListener('click', function() {\r\n    callModal.showModal();\r\n});"]}